{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aymeric-PC\\\\Desktop\\\\essai1-api\\\\firstAPIfront\\\\src\\\\Components\\\\Forms\\\\AddEditForm.js\";\nimport React from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nclass AddEditForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: 0,\n      first: '',\n      last: '',\n      email: '',\n      phone: '',\n      location: '',\n      hobby: ''\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.submitFormAdd = e => {\n      e.preventDefault();\n      fetch('http://localhost:5000/crud', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          first: this.state.first,\n          last: this.state.last,\n          email: this.state.email,\n          phone: this.state.phone,\n          location: this.state.location,\n          hobby: this.state.hobby\n        })\n      }).then(response => response.json()).then(item => {\n        if (Array.isArray(item)) {\n          this.props.addItemToState(item[0]);\n          this.props.toggle();\n        } else {\n          console.log('failure');\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.submitFormEdit = e => {\n      e.preventDefault();\n      fetch('http://localhost:5000/crud', {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: this.state.id,\n          first: this.state.first,\n          last: this.state.last,\n          email: this.state.email,\n          phone: this.state.phone,\n          location: this.state.location,\n          hobby: this.state.hobby\n        })\n      }).then(response => response.json()).then(item => {\n        if (Array.isArray(item)) {\n          // console.log(item[0])\n          this.props.updateState(item[0]);\n          this.props.toggle();\n        } else {\n          console.log('failure');\n        }\n      }).catch(err => console.log(err));\n    };\n  }\n\n  componentDidMount() {\n    // if item exists, populate the state with proper data\n    if (this.props.item) {\n      const _this$props$item = this.props.item,\n            id = _this$props$item.id,\n            first = _this$props$item.first,\n            last = _this$props$item.last,\n            email = _this$props$item.email,\n            phone = _this$props$item.phone,\n            location = _this$props$item.location,\n            hobby = _this$props$item.hobby;\n      this.setState({\n        id,\n        first,\n        last,\n        email,\n        phone,\n        location,\n        hobby\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(Form, {\n      onSubmit: this.props.item ? this.submitFormEdit : this.submitFormAdd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"first\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"first\",\n      id: \"first\",\n      onChange: this.onChange,\n      value: this.state.first === null ? '' : this.state.first,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"last\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"last\",\n      id: \"last\",\n      onChange: this.onChange,\n      value: this.state.last === null ? '' : this.state.last,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      onChange: this.onChange,\n      value: this.state.email === null ? '' : this.state.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Phone\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"phone\",\n      id: \"phone\",\n      onChange: this.onChange,\n      value: this.state.phone === null ? '' : this.state.phone,\n      placeholder: \"ex. 555-555-5555\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Location\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"location\",\n      id: \"location\",\n      onChange: this.onChange,\n      value: this.state.location === null ? '' : this.state.location,\n      placeholder: \"City, State\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"hobby\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Hobby\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"hobby\",\n      id: \"hobby\",\n      onChange: this.onChange,\n      value: this.state.hobby,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nexport default AddEditForm;","map":{"version":3,"sources":["C:/Users/Aymeric-PC/Desktop/essai1-api/firstAPIfront/src/Components/Forms/AddEditForm.js"],"names":["React","Button","Form","FormGroup","Label","Input","AddEditForm","Component","state","id","first","last","email","phone","location","hobby","onChange","e","setState","target","name","value","submitFormAdd","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","item","Array","isArray","props","addItemToState","toggle","console","log","catch","err","submitFormEdit","updateState","componentDidMount","render"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\n\r\nclass AddEditForm extends React.Component {\r\n  state = {\r\n    id: 0,\r\n    first: '',\r\n    last: '',\r\n    email: '',\r\n    phone: '',\r\n    location: '',\r\n    hobby: ''\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({[e.target.name]: e.target.value})\r\n  }\r\n\r\n  submitFormAdd = e => {\r\n    e.preventDefault()\r\n    fetch('http://localhost:5000/crud', {\r\n      method: 'post',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        first: this.state.first,\r\n        last: this.state.last,\r\n        email: this.state.email,\r\n        phone: this.state.phone,\r\n        location: this.state.location,\r\n        hobby: this.state.hobby\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(item => {\r\n        if(Array.isArray(item)) {\r\n          this.props.addItemToState(item[0])\r\n          this.props.toggle()\r\n        } else {\r\n          console.log('failure')\r\n        }\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  submitFormEdit = e => {\r\n    e.preventDefault()\r\n    fetch('http://localhost:5000/crud', {\r\n      method: 'put',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        id: this.state.id,\r\n        first: this.state.first,\r\n        last: this.state.last,\r\n        email: this.state.email,\r\n        phone: this.state.phone,\r\n        location: this.state.location,\r\n        hobby: this.state.hobby\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(item => {\r\n        if(Array.isArray(item)) {\r\n          // console.log(item[0])\r\n          this.props.updateState(item[0])\r\n          this.props.toggle()\r\n        } else {\r\n          console.log('failure')\r\n        }\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  componentDidMount(){\r\n    // if item exists, populate the state with proper data\r\n    if(this.props.item){\r\n      const { id, first, last, email, phone, location, hobby } = this.props.item\r\n      this.setState({ id, first, last, email, phone, location, hobby })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.props.item ? this.submitFormEdit : this.submitFormAdd}>\r\n        <FormGroup>\r\n          <Label for=\"first\">First Name</Label>\r\n          <Input type=\"text\" name=\"first\" id=\"first\" onChange={this.onChange} value={this.state.first === null ? '' : this.state.first} />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"last\">Last Name</Label>\r\n          <Input type=\"text\" name=\"last\" id=\"last\" onChange={this.onChange} value={this.state.last === null ? '' : this.state.last}  />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"email\">Email</Label>\r\n          <Input type=\"email\" name=\"email\" id=\"email\" onChange={this.onChange} value={this.state.email === null ? '' : this.state.email}  />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"phone\">Phone</Label>\r\n          <Input type=\"text\" name=\"phone\" id=\"phone\" onChange={this.onChange} value={this.state.phone === null ? '' : this.state.phone}  placeholder=\"ex. 555-555-5555\" />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"location\">Location</Label>\r\n          <Input type=\"text\" name=\"location\" id=\"location\" onChange={this.onChange} value={this.state.location === null ? '' : this.state.location}  placeholder=\"City, State\" />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"hobby\">Hobby</Label>\r\n          <Input type=\"text\" name=\"hobby\" id=\"hobby\" onChange={this.onChange} value={this.state.hobby}  />\r\n        </FormGroup>\r\n        <Button>Submit</Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddEditForm"]},"metadata":{},"sourceType":"module"}