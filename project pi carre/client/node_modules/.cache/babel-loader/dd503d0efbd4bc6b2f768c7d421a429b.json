{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Aymeric-PC\\\\Desktop\\\\firstAPIfront\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Aymeric-PC\\\\Desktop\\\\firstAPIfront\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\Aymeric-PC\\\\Desktop\\\\firstAPIfront\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\Aymeric-PC\\\\Desktop\\\\firstAPIfront\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\Aymeric-PC\\\\Desktop\\\\firstAPIfront\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import{Button,Modal,ModalHeader,ModalBody}from'reactstrap';import AddEditForm from'../Forms/AddEditForm';var ModalForm=/*#__PURE__*/function(_Component){_inherits(ModalForm,_Component);function ModalForm(props){var _this;_classCallCheck(this,ModalForm);_this=_possibleConstructorReturn(this,_getPrototypeOf(ModalForm).call(this,props));_this.toggle=function(){_this.setState(function(prevState){return{modal:!prevState.modal};});};_this.state={modal:false};return _this;}_createClass(ModalForm,[{key:\"render\",value:function render(){var closeBtn=React.createElement(\"button\",{className:\"close\",onClick:this.toggle},\"\\xD7\");var label=this.props.buttonLabel;var button='';var title='';if(label==='Edit'){button=React.createElement(Button,{color:\"warning\",onClick:this.toggle,style:{float:\"left\",marginRight:\"10px\"}},label);title='Edit Item';}else{button=React.createElement(Button,{color:\"success\",onClick:this.toggle,style:{float:\"left\",marginRight:\"10px\"}},label);title='Add New Item';}return React.createElement(\"div\",null,button,React.createElement(Modal,{isOpen:this.state.modal,toggle:this.toggle,className:this.props.className},React.createElement(ModalHeader,{toggle:this.toggle,close:closeBtn},title)));}}]);return ModalForm;}(Component);export default ModalForm;","map":{"version":3,"sources":["C:/Users/Aymeric-PC/Desktop/firstAPIfront/src/Components/Modals/Modal.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","AddEditForm","ModalForm","props","toggle","setState","prevState","modal","state","closeBtn","label","buttonLabel","button","title","float","marginRight","className"],"mappings":"6pBACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,MAAT,CAAiBC,KAAjB,CAAwBC,WAAxB,CAAqCC,SAArC,KAAsD,YAAtD,CACA,MAAOC,CAAAA,WAAP,KAAwB,sBAAxB,C,GAEMC,CAAAA,S,mEACJ,mBAAYC,KAAZ,CAAmB,2CACjB,2EAAMA,KAAN,GADiB,MAOnBC,MAPmB,CAOV,UAAM,CACb,MAAKC,QAAL,CAAc,SAAAC,SAAS,QAAK,CAC1BC,KAAK,CAAE,CAACD,SAAS,CAACC,KADQ,CAAL,EAAvB,EAGD,CAXkB,CAEjB,MAAKC,KAAL,CAAa,CACXD,KAAK,CAAE,KADI,CAAb,CAFiB,aAKlB,C,6DAQQ,CACL,GAAME,CAAAA,QAAQ,CAAG,8BAAQ,SAAS,CAAC,OAAlB,CAA0B,OAAO,CAAE,KAAKL,MAAxC,SAAjB,CAEA,GAAMM,CAAAA,KAAK,CAAG,KAAKP,KAAL,CAAWQ,WAAzB,CAEA,GAAIC,CAAAA,MAAM,CAAG,EAAb,CACA,GAAIC,CAAAA,KAAK,CAAG,EAAZ,CAEA,GAAGH,KAAK,GAAK,MAAb,CAAoB,CAClBE,MAAM,CAAG,oBAAC,MAAD,EACC,KAAK,CAAC,SADP,CAEC,OAAO,CAAE,KAAKR,MAFf,CAGC,KAAK,CAAE,CAACU,KAAK,CAAE,MAAR,CAAgBC,WAAW,CAAC,MAA5B,CAHR,EAG8CL,KAH9C,CAAT,CAKAG,KAAK,CAAG,WAAR,CACD,CAPD,IAOO,CACLD,MAAM,CAAG,oBAAC,MAAD,EACC,KAAK,CAAC,SADP,CAEC,OAAO,CAAE,KAAKR,MAFf,CAGC,KAAK,CAAE,CAACU,KAAK,CAAE,MAAR,CAAgBC,WAAW,CAAC,MAA5B,CAHR,EAG8CL,KAH9C,CAAT,CAKAG,KAAK,CAAG,cAAR,CACD,CAGD,MACA,gCACGD,MADH,CAEE,oBAAC,KAAD,EAAO,MAAM,CAAE,KAAKJ,KAAL,CAAWD,KAA1B,CAAiC,MAAM,CAAE,KAAKH,MAA9C,CAAsD,SAAS,CAAE,KAAKD,KAAL,CAAWa,SAA5E,EACE,oBAAC,WAAD,EAAa,MAAM,CAAE,KAAKZ,MAA1B,CAAkC,KAAK,CAAEK,QAAzC,EAAoDI,KAApD,CADF,CAFF,CADA,CAQH,C,uBA/CqBjB,S,EAkDxB,cAAeM,CAAAA,SAAf","sourcesContent":["\r\nimport React, { Component } from 'react'\r\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap'\r\nimport AddEditForm from '../Forms/AddEditForm'\r\n\r\nclass ModalForm extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      modal: false\r\n    }\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal\r\n    }))\r\n  }\r\n\r\n  render() {\r\n      const closeBtn = <button className=\"close\" onClick={this.toggle}>&times;</button>\r\n\r\n      const label = this.props.buttonLabel\r\n\r\n      let button = ''\r\n      let title = ''\r\n\r\n      if(label === 'Edit'){\r\n        button = <Button\r\n                  color=\"warning\"\r\n                  onClick={this.toggle}\r\n                  style={{float: \"left\", marginRight:\"10px\"}}>{label}\r\n                </Button>\r\n        title = 'Edit Item'\r\n      } else {\r\n        button = <Button\r\n                  color=\"success\"\r\n                  onClick={this.toggle}\r\n                  style={{float: \"left\", marginRight:\"10px\"}}>{label}\r\n                </Button>\r\n        title = 'Add New Item'\r\n      }\r\n\r\n\r\n      return (\r\n      <div>\r\n        {button}\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\r\n          <ModalHeader toggle={this.toggle} close={closeBtn}>{title}</ModalHeader>          \r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ModalForm"]},"metadata":{},"sourceType":"module"}