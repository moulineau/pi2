{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aymeric-PC\\\\Desktop\\\\Cours\\\\pi2\\\\project pi carre\\\\client\\\\src\\\\Form.js\";\nimport React from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nclass Forme extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      mdp: '',\n      email: ''\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.submitForm = e => {\n      e.preventDefault();\n      console.log('welcome mister');\n      fetch('http://localhost:5000/auth/login', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        mode: 'no-cors',\n        body: JSON.stringify({\n          email: this.state.email,\n          mdp: this.state.mdp\n        })\n      }).then(response => response.json()).then(item => {\n        if (Array.isArray(item)) {\n          this.props.result(item);\n          this.props.state();\n        } else {\n          console.log('failure');\n        }\n      }).catch(err => console.log(err));\n    };\n  }\n\n  componentDidMount() {\n    // if item exists, populate the state with proper data\n    if (this.props.item) {\n      const _this$props$item = this.props.item,\n            email = _this$props$item.email,\n            mdp = _this$props$item.mdp;\n      this.setState({\n        email,\n        mdp\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(Form, {\n      onSubmit: this.submitForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      onChange: this.onChange,\n      value: this.state.email === null ? '' : this.state.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"mdp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Mot de passe\"), React.createElement(Input, {\n      type: \"password\",\n      name: \"mdp\",\n      id: \"mdp\",\n      onChange: this.onChange,\n      value: this.state.mdp === null ? '' : this.state.mdp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nexport default Forme;","map":{"version":3,"sources":["C:/Users/Aymeric-PC/Desktop/Cours/pi2/project pi carre/client/src/Form.js"],"names":["React","Button","Form","FormGroup","Label","Input","Forme","Component","state","mdp","email","onChange","e","setState","target","name","value","submitForm","preventDefault","console","log","fetch","method","headers","mode","body","JSON","stringify","then","response","json","item","Array","isArray","props","result","catch","err","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\n\r\nclass Forme extends React.Component {\r\n    state = {\r\n        mdp: '',\r\n        email: ''\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    submitForm = e => {\r\n        e.preventDefault()\r\n        console.log('welcome mister')\r\n        fetch('http://localhost:5000/auth/login', {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            mode: 'no-cors',\r\n            body: JSON.stringify({\r\n                email: this.state.email,\r\n                mdp: this.state.mdp,\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(item => {\r\n                if (Array.isArray(item)) {\r\n                    this.props.result(item)\r\n                    this.props.state()\r\n                } else {\r\n                    console.log('failure')\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    componentDidMount() {\r\n        // if item exists, populate the state with proper data\r\n        if (this.props.item) {\r\n            const { email, mdp } = this.props.item\r\n            this.setState({ email, mdp })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form onSubmit={this.submitForm}>\r\n                <FormGroup>\r\n                    <Label for=\"email\">Email</Label>\r\n                    <Input type=\"email\" name=\"email\" id=\"email\" onChange={this.onChange} value={this.state.email === null ? '' : this.state.email} />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"mdp\">Mot de passe</Label>\r\n                    <Input type=\"password\" name=\"mdp\" id=\"mdp\" onChange={this.onChange} value={this.state.mdp === null ? '' : this.state.mdp} />\r\n                </FormGroup>\r\n                <Button>Submit</Button>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Forme"]},"metadata":{},"sourceType":"module"}