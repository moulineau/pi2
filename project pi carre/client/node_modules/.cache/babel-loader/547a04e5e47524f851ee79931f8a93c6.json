{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aymeric-PC\\\\Desktop\\\\Cours\\\\pi2\\\\project pi carre\\\\client\\\\src\\\\somme.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nclass app extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: []\n    };\n  }\n\n  componentDidMount() {\n    const params = this.props.match.params;\n    fetch(`/use/users/${params.id}/somme`, {\n      credentials: 'include'\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw response;\n      }\n    }).then(user => user[0].sum).then(user => this.setState({\n      user: `${user}`\n    })).catch(err => {\n      err.json().then(errMess => {\n        console.log(\"error : \", errMess.message);\n\n        if (errMess.message === \"Un-Authorized User\") {\n          this.props.history.push(`/users/${sessionStorage.user_id}`, {});\n          window.location.reload();\n        } else {\n          this.props.history.push(\"/login\", {});\n        }\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(Router, {\n      forceRefresh: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"somme :\", this.state.user)));\n  }\n\n}\n\nexport default app;","map":{"version":3,"sources":["C:/Users/Aymeric-PC/Desktop/Cours/pi2/project pi carre/client/src/somme.js"],"names":["React","Component","BrowserRouter","Router","app","state","user","componentDidMount","params","props","match","fetch","id","credentials","then","response","ok","json","sum","setState","catch","err","errMess","console","log","message","history","push","sessionStorage","user_id","window","location","reload","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;;AAKA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACxBI,KADwB,GAChB;AACJC,MAAAA,IAAI,EAAE;AADF,KADgB;AAAA;;AAIxBC,EAAAA,iBAAiB,GAAE;AAAA,UACEC,MADF,GACe,KAAKC,KADpB,CACPC,KADO,CACEF,MADF;AAEfG,IAAAA,KAAK,CAAE,cAAaH,MAAM,CAACI,EAAG,QAAzB,EAAkC;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAlC,CAAL,CACKC,IADL,CACUC,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACb,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACH,OAFD,MAEO;AACH,cAAMF,QAAN;AACH;AACJ,KAPL,EAQKD,IARL,CAQUR,IAAI,IAAEA,IAAI,CAAC,CAAD,CAAJ,CAAQY,GARxB,EASKJ,IATL,CASUR,IAAI,IAAI,KAAKa,QAAL,CAAc;AAAEb,MAAAA,IAAI,EAAI,GAAEA,IAAK;AAAjB,KAAd,CATlB,EAUKc,KAVL,CAUWC,GAAG,IAAI;AACVA,MAAAA,GAAG,CAACJ,IAAJ,GAAWH,IAAX,CAAgBQ,OAAO,IAAI;AACvBC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,OAAO,CAACG,OAAhC;;AACA,YAAIH,OAAO,CAACG,OAAR,KAAoB,oBAAxB,EAA8C;AAC1C,eAAKhB,KAAL,CAAWiB,OAAX,CAAmBC,IAAnB,CAAyB,UAASC,cAAc,CAACC,OAAQ,EAAzD,EAA4D,EAA5D;AACAC,UAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,SAHD,MAIK;AACD,eAAKvB,KAAL,CAAWiB,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB,EAAkC,EAAlC;AACH;AACJ,OATD;AAWH,KAtBL;AAuBH;;AACDM,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,MAAD;AAAQ,MAAA,YAAY,EAAE,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAW,KAAK5B,KAAL,CAAWC,IAAtB,CADJ,CADJ,CADJ;AAOH;;AAtCuB;;AAwC5B,eAAeF,GAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nclass app extends Component {\r\n    state = {\r\n        user: []\r\n    }\r\n    componentDidMount(){\r\n        const { match: { params } } = this.props;\r\n        fetch(`/use/users/${params.id}/somme`, { credentials: 'include' })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                } else {\r\n                    throw response;\r\n                }\r\n            })\r\n            .then(user=>user[0].sum)\r\n            .then(user => this.setState({ user : `${user}`}))\r\n            .catch(err => {\r\n                err.json().then(errMess => {\r\n                    console.log(\"error : \", errMess.message);\r\n                    if (errMess.message === \"Un-Authorized User\") {\r\n                        this.props.history.push(`/users/${sessionStorage.user_id}`, {});\r\n                        window.location.reload();\r\n                    }\r\n                    else {\r\n                        this.props.history.push(\"/login\", {})\r\n                    }\r\n                })\r\n\r\n            });\r\n    }\r\n    render() {\r\n        return (     \r\n            <Router forceRefresh={true}>  \r\n                <div>\r\n                    <p>somme :{this.state.user}</p>\r\n                </div>\r\n            </Router>                 \r\n        )\r\n    }\r\n}\r\nexport default app "]},"metadata":{},"sourceType":"module"}